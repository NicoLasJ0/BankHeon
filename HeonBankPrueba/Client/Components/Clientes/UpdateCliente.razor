
@inject ClientesService clientesService
@inject TipoIdentificacionService tipoIdService
@inject NavigationManager navManager

<h1>UpdateCliente</h1>


<EditForm Model="@cliente" OnSubmit="@UpdateClientes">
    <div class="mb-3">
        <label>Id</label>
        <InputNumber @bind-Value="@clienteDtoOut.CliId" class="form-control" disabled readonly></InputNumber>
    </div>

    <div class="row">
        <div class="col">
            <label>Nombre</label>
            <InputText class="form-control" @bind-Value="@cliente.CliNombres" placeholder="@clienteDtoOut.Nombres"></InputText>
        </div>
        <div class="col">
            <label>Apellidos</label>
            <InputText class="form-control" @bind-Value="@cliente.CliApellidos" placeholder="@clienteDtoOut.Apellidos"></InputText>
        </div>
    </div>

    <div class="mb-3">
        <label>Documento de Identidad</label>
        <InputText class="form-control" @bind-Value="@cliente.CliCodigo" placeholder="@clienteDtoOut.Codigo"></InputText>
    </div>
    <div class="mb-3">
        <InputSelect @bind-Value="cliente.TpiId" class="form-select">
            <option>Seleccione el tipo de identificación</option>
            @foreach (var tipo in tipos)
            {
                <option value="@tipo.TpiId">@tipo.TpiDescripcion</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Update Cliente</button>

</EditForm>


@code {
    [Parameter]
    public string Id { get; set; }

    ClienteDtoOut? clienteDtoOut = new ClienteDtoOut();
    List<TipoIdentificacion>? tipos = new List<TipoIdentificacion>();

    Clientes cliente = new Clientes();

    protected override async Task OnInitializedAsync()
    {
        this.clienteDtoOut = await clientesService.GetCliente(Id);
        this.tipos = await tipoIdService.GetTipoIdentificacion();
    }

    private async Task UpdateClientes()
    {
        this.cliente.CliId = this.clienteDtoOut.CliId;
        await this.clientesService.UpdateProduct(cliente);
        this.navManager.NavigateTo("clientes");
    }
}
